{"version":3,"sources":["img/floyd.jpg","components/Navitem.js","components/Navbar.js","components/Social.js","contents/Home.js","contents/About.js","components/Widecard.js","contents/Education.js","contents/Skills.js","contents/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navitem","id","this","props","item","to","tolink","onClick","activec","bind","Component","Navbar","activeitem","x","state","NavItemActive","length","document","getElementById","classList","remove","setState","add","Social","class","href","target","rel","Home","className","src","profilepic","alt","text","speed","eraseDelay","About","Widecard","title","where","from","classes","map","value","Education","highlightActive","groupFont","1","2","3","groupFontSelected","graph","nodes","edges","options","width","hover","hoverConnectedEdges","hoverEdges","selectable","selectConnectedEdges","zoomView","dragView","Skills","getNetwork","data","network","getEdges","console","log","getNodes","events","select","event","hoverNode","neighbourhoodHighlight","searchData","blurNode","neighbourhoodHighlightHide","click","redirectToLearn","style","height","position","zindex","measure","stateObj","mounted","window","addEventListener","removeEventListener","redraw","fit","params","getNodeAt","pointer","DOM","allNodes","cloneNodes","vis","DataSet","get","returnType","canvas","body","container","cursor","undefined","node","i","j","selectedNode","nodeId","color","hiddenLabel","label","connectedNodes","getConnectedNodes","allConnectedNodes","concat","font","size","group","updateArray","hasOwnProperty","push","allNodess","nodeIds","nodeIde","Contact","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6f773f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/floyd.9271fa8b.jpg\";","import React, { Component } from 'react';\nimport {\n    Link\n} from \"react-router-dom\";\n\nclass Navitem extends Component {\n    render() {\n                return (\n                    <li id={this.props.item}>\n                    <Link to={this.props.tolink} onClick={this.props.activec.bind(this,this.props.item)}>{this.props.item}</Link>\n                    </li>\n                    )\n            }\n        }\n        \n        export default Navitem\n        ","import React, { Component } from 'react';\nimport Navitem from './Navitem';\n\nclass Navbar extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            'NavItemActive':''\n        }\n    }\n    activeitem=(x)=>\n    {\n        if(this.state.NavItemActive.length>0){\n            document.getElementById(this.state.NavItemActive).classList.remove('active');\n        }\n        this.setState({'NavItemActive':x},()=>{\n            document.getElementById(this.state.NavItemActive).classList.add('active');\n        });\n    };\n    render() {\n        return (\n            <nav>\n            <ul>\n            <Navitem item=\"Home\" tolink=\"/\"  activec={this.activeitem}></Navitem>\n            <Navitem item=\"About\" tolink=\"/about\"  activec={this.activeitem}></Navitem>\n            <Navitem item=\"Education\" tolink=\"/education\"  activec={this.activeitem}></Navitem>\n            <Navitem item=\"Skills\" tolink=\"/skills\"  activec={this.activeitem}></Navitem>\n            <Navitem item=\"Contact\" tolink=\"/contact\"  activec={this.activeitem}></Navitem>\n            </ul>\n            </nav>\n            )\n        }\n    }\n    \n    export default Navbar\n    ","import React, { Component } from 'react';\n\nclass Social extends Component {\n    render() {\n        return (\n            <div class=\"social\">\n            <a href=\"https://github.com/fleverest/\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-github\"></i></a>\n            <a href=\"https://www.linkedin.com/in/feverest/\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-linkedin-in\"></i></a>\n            </div>\n            )\n        }\n    }\n    \nexport default Social\n    ","import React, { Component } from 'react';\nimport ReactTypingEffect from 'react-typing-effect';\nimport profilepic from '../img/floyd.jpg';\nimport Social from '../components/Social';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"condiv home\">\n            <img src={profilepic} className=\"profilepic\" alt=\"floyd\"></img>\n            <ReactTypingEffect className=\"typingeffect\" text={['Friend floyd = new Friend();','floyd :: forall a. Problem a -> Solution a']} speed={100} eraseDelay={700}/>\n            <Social />\n            </div>\n            )\n        }\n    }\n    \n    export default Home\n","import React, { Component } from 'react';\n\nclass About extends Component {\n    render() {\n        return (\n            <div className=\"condiv blur\">\n            <h1>About me</h1>\n            <h3>Data Science | Mathematics & Statistics | Web Development</h3>\n            <br></br>\n            <p>\n                I'm a full time student at the University of Melbourne, and I have been for a long time now. I graduated with a Bachelor of Science in 2017, majoring in Pure Mathematics. I continued pursuing this for another year, and half-completed my Master's in the field. Unfortunately, the degree wasn't flexible enough for me to pursue my passion for computer science and statistics, so I decided to leave the degree and start my journey anew with a Graduate Diploma in Data Science.\n            </p>\n            \n            </div>\n            )\n        }\n    }\n    \nexport default About\n    ","import React, { Component } from 'react'\n\nclass Widecard extends Component {\n    render() {\n        return (\n            <div class=\"widecard\">\n            <div class=\"compdet\">\n            <h3>{this.props.title}</h3>\n            <p class=\"secondtext\">{this.props.where} ({this.props.from}{this.props.to? \" - \" + this.props.to : \"\" })</p>\n            <ul>\n            {\n                this.props.classes.map((value)=>{\n                    return <li>{value}</li>\n                })\n            }\n            </ul>\n            </div>\n            </div>\n            )\n        }\n    }\n    \nexport default Widecard\n    ","import React, { Component } from 'react';\nimport Widecard from '../components/Widecard';\n\nclass Education extends Component {\n    render() {\n        return (\n            <div className=\"condiv edu blur\">\n            <h1 className=\"subtopic\">My Education</h1>\n            <Widecard title=\"Graduate Diploma in Data Science\" where=\"the University of Melbourne\" from=\"February 2020\" to=\"Present\" classes={[\"Methods of Mathematical Statistics\", \"Programming and Software Development\", \"Advanced Database Systems\"]}/>\n            <Widecard title=\"Mikrotik Certified Wireless Engineer\" from=\"2019\" classes={[\"802.11\",\"Wireless Security\",\"RADIUS\", \"MESH\", \"Wireless Transparent Bridging\"]}/>\n            <Widecard title=\"Mikrotik Certified Network Associate\" where=\"DuxTel Training\" from=\"2019\" classes={[\"TCP/IP\",\"RouterOS\",\"DHCP\",\"ARP\",\"Wireless Networking\",\"Routing\",\"Firewall & NAT\",\"QoS\", \"PPTP & SSTP\"]}/>\n            <Widecard title=\"Master of Science in Pure Mathematics - Incomplete\" where=\"the University of Melbourne\" from=\"2018\" to=\"2019\" classes={[\"Algorithms and Complexity\", \"Advanced Theoretical Computer Science\", \"Advanced Topics in Geometry and Topology\", \"Algebraic Topology\"]}/>\n            <Widecard title=\"Bachelor of Science in Pure Mathematics\" where=\"the University of Melbourne\" from=\"2015\" to=\"2017\" classes={[\"Complex Analysis\", \"Vector Calculus\", \"Graph Theory\", \"Database Systems\"]}/>\n            </div>\n            )\n        }\n    }\n    \nexport default Education\n    ","import React, { Component } from 'react'\nimport Graph from 'vis-react';\n\nvar highlightActive = false;\n\n// parsing and collecting nodes and edges from the python\n\nconst groupFont = {\n    1: {\"size\": 35, \"color\": \"white\"},\n    2: {\"size\": 30, \"color\": \"white\"},\n    3: {\"size\": 20, \"color\": \"white\"}\n}\n\nconst groupFontSelected = {\n    1: {\"size\": 45, \"color\": \"black\"},\n    2: {\"size\": 40, \"color\": \"black\"},\n    3: {\"size\": 35, \"color\": \"black\"}\n}\n\nvar graph = {\n    nodes : [{\"group\": 1, \"id\": \"Data Science\", \"label\": \"Data Science\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Topological Data Analysis\", \"label\": \"Topological Data Analysis\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Regularization\", \"label\": \"Regularization\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Dimensionality Reduction\", \"label\": \"Dimensionality Reduction\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Databases\", \"label\": \"Databases\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Python\", \"label\": \"Python\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"R\", \"label\": \"R\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Visualization\", \"label\": \"Visualization\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Feature Selection\", \"label\": \"Feature Selection\", \"shape\": \"dot\"}, {\"group\": 1, \"id\": \"Mathematics\", \"label\": \"Mathematics\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Topology\", \"label\": \"Topology\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Statistics\", \"label\": \"Statistics\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Algebra\", \"label\": \"Algebra\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Discrete Mathematics\", \"label\": \"Discrete Mathematics\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Geometry\", \"label\": \"Geometry\", \"shape\": \"dot\"}, {\"group\": 1, \"id\": \"Systems Administration\", \"label\": \"Systems Administration\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Linux\", \"label\": \"Linux\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Containers\", \"label\": \"Containers\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"GitLab Pipelines\", \"label\": \"GitLab Pipelines\", \"shape\": \"dot\"}, {\"group\": 1, \"id\": \"Software Engineering\", \"label\": \"Software Engineering\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Imperative\", \"label\": \"Imperative\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Git\", \"label\": \"Git\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Declarative\", \"label\": \"Declarative\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"OOP\", \"label\": \"OOP\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"API\", \"label\": \"API\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Web Development\", \"label\": \"Web Development\", \"shape\": \"dot\"}, {\"group\": 2, \"id\": \"Functional\", \"label\": \"Functional\", \"shape\": \"dot\"}, {\"group\": 1, \"id\": \"Computer Networks\", \"label\": \"Computer Networks\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"MikroTik\", \"label\": \"MikroTik\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Wireless Networking\", \"label\": \"Wireless Networking\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"IPSec\", \"label\": \"IPSec\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Linux Networking\", \"label\": \"Linux Networking\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"TCP/IP\", \"label\": \"TCP/IP\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"RouterOS\", \"label\": \"RouterOS\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"OSI Reference Model\", \"label\": \"OSI Reference Model\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"WireGuard\", \"label\": \"WireGuard\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"C\", \"label\": \"C\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"High-Dimensional Manifolds\", \"label\": \"High-Dimensional Manifolds\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Simplicial Homology\", \"label\": \"Simplicial Homology\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"SQL\", \"label\": \"SQL\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Cypher\", \"label\": \"Cypher\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"SciKitLearn\", \"label\": \"SciKitLearn\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"PyTorch\", \"label\": \"PyTorch\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"pandas\", \"label\": \"pandas\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"NumPy\", \"label\": \"NumPy\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Flask\", \"label\": \"Flask\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"SciPy\", \"label\": \"SciPy\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"TensorFlow\", \"label\": \"TensorFlow\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Algebraic Geometry\", \"label\": \"Algebraic Geometry\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Vector Spaces\", \"label\": \"Vector Spaces\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Graph Theory\", \"label\": \"Graph Theory\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Algebraic Topology\", \"label\": \"Algebraic Topology\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"X Server\", \"label\": \"X Server\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"GRUB2\", \"label\": \"GRUB2\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"SystemCTL\", \"label\": \"SystemCTL\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Probability Theory\", \"label\": \"Probability Theory\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Haskell\", \"label\": \"Haskell\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Mathematica\", \"label\": \"Mathematica\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"GraphQL\", \"label\": \"GraphQL\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"RESTful\", \"label\": \"RESTful\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"PCA\", \"label\": \"PCA\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Kernel PCA\", \"label\": \"Kernel PCA\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Autoencoder\", \"label\": \"Autoencoder\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"noSQL\", \"label\": \"noSQL\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Neo4j\", \"label\": \"Neo4j\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Postgres\", \"label\": \"Postgres\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Dgraph\", \"label\": \"Dgraph\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"MariaDB\", \"label\": \"MariaDB\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Bayesian\", \"label\": \"Bayesian\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Multivariate Statistics\", \"label\": \"Multivariate Statistics\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Frequentist\", \"label\": \"Frequentist\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Bias-Variance Tradeoff\", \"label\": \"Bias-Variance Tradeoff\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"MLE\", \"label\": \"MLE\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"MAP\", \"label\": \"MAP\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Keras\", \"label\": \"Keras\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Generalized Linear Models\", \"label\": \"Generalized Linear Models\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"ggplot2\", \"label\": \"ggplot2\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"networkD3\", \"label\": \"networkD3\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"data.tree\", \"label\": \"data.tree\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Oracle/Matlab\", \"label\": \"Oracle/Matlab\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"C++\", \"label\": \"C++\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Java\", \"label\": \"Java\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"FCBF (Filter)\", \"label\": \"FCBF (Filter)\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Wrapper Methods\", \"label\": \"Wrapper Methods\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Random Forest Classifiers\", \"label\": \"Random Forest Classifiers\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Kubernetes\", \"label\": \"Kubernetes\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"NodeJS\", \"label\": \"NodeJS\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Docker\", \"label\": \"Docker\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"JavaScript\", \"label\": \"JavaScript\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Differential Geometry\", \"label\": \"Differential Geometry\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Confidence Intervals\", \"label\": \"Confidence Intervals\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Lp Norms\", \"label\": \"Lp Norms\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Hypothesis Testing\", \"label\": \"Hypothesis Testing\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Method of Moments\", \"label\": \"Method of Moments\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Maximum Likelihood Estimation\", \"label\": \"Maximum Likelihood Estimation\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Dirichlet Tree Priors\", \"label\": \"Dirichlet Tree Priors\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Linear Algebra\", \"label\": \"Linear Algebra\", \"shape\": \"dot\"}, {\"group\": 3, \"id\": \"Complex Space\", \"label\": \"Complex Space\", \"shape\": \"dot\"}],\n    edges: [{\"from\": \"Data Science\", \"to\": \"Topological Data Analysis\" }, {\"from\": \"Data Science\", \"to\": \"Regularization\" }, {\"from\": \"Data Science\", \"to\": \"Dimensionality Reduction\" }, {\"from\": \"Data Science\", \"to\": \"Databases\" }, {\"from\": \"Data Science\", \"to\": \"Python\" }, {\"from\": \"Data Science\", \"to\": \"R\" }, {\"from\": \"Data Science\", \"to\": \"Visualization\" }, {\"from\": \"Data Science\", \"to\": \"Feature Selection\" }, {\"from\": \"Mathematics\", \"to\": \"Topology\" }, {\"from\": \"Mathematics\", \"to\": \"Statistics\" }, {\"from\": \"Mathematics\", \"to\": \"Algebra\" }, {\"from\": \"Mathematics\", \"to\": \"Discrete Mathematics\" }, {\"from\": \"Mathematics\", \"to\": \"Geometry\" }, {\"from\": \"Systems Administration\", \"to\": \"Linux\" }, {\"from\": \"Systems Administration\", \"to\": \"Databases\" }, {\"from\": \"Systems Administration\", \"to\": \"Containers\" }, {\"from\": \"Systems Administration\", \"to\": \"GitLab Pipelines\" }, {\"from\": \"Software Engineering\", \"to\": \"Imperative\" }, {\"from\": \"Software Engineering\", \"to\": \"Git\" }, {\"from\": \"Software Engineering\", \"to\": \"Declarative\" }, {\"from\": \"Software Engineering\", \"to\": \"OOP\" }, {\"from\": \"Software Engineering\", \"to\": \"API\" }, {\"from\": \"Software Engineering\", \"to\": \"Web Development\" }, {\"from\": \"Software Engineering\", \"to\": \"Functional\" }, {\"from\": \"Computer Networks\", \"to\": \"MikroTik\" }, {\"from\": \"Computer Networks\", \"to\": \"Wireless Networking\" }, {\"from\": \"Computer Networks\", \"to\": \"IPSec\" }, {\"from\": \"Computer Networks\", \"to\": \"Linux Networking\" }, {\"from\": \"Computer Networks\", \"to\": \"TCP/IP\" }, {\"from\": \"Computer Networks\", \"to\": \"RouterOS\" }, {\"from\": \"Computer Networks\", \"to\": \"OSI Reference Model\" }, {\"from\": \"Computer Networks\", \"to\": \"WireGuard\" }, {\"from\": \"Imperative\", \"to\": \"C\" }, {\"from\": \"Topology\", \"to\": \"High-Dimensional Manifolds\" }, {\"from\": \"Topology\", \"to\": \"Simplicial Homology\" }, {\"from\": \"Topology\", \"to\": \"Topological Data Analysis\" }, {\"from\": \"Declarative\", \"to\": \"SQL\" }, {\"from\": \"Declarative\", \"to\": \"Cypher\" }, {\"from\": \"Python\", \"to\": \"SciKitLearn\" }, {\"from\": \"Python\", \"to\": \"PyTorch\" }, {\"from\": \"Python\", \"to\": \"pandas\" }, {\"from\": \"Python\", \"to\": \"NumPy\" }, {\"from\": \"Python\", \"to\": \"Flask\" }, {\"from\": \"Python\", \"to\": \"SciPy\" }, {\"from\": \"Python\", \"to\": \"TensorFlow\" }, {\"from\": \"Algebra\", \"to\": \"Algebraic Geometry\" }, {\"from\": \"Algebra\", \"to\": \"Vector Spaces\" }, {\"from\": \"Algebra\", \"to\": \"Graph Theory\" }, {\"from\": \"Algebra\", \"to\": \"Algebraic Topology\" }, {\"from\": \"Linux\", \"to\": \"X Server\" }, {\"from\": \"Linux\", \"to\": \"Linux Networking\" }, {\"from\": \"Linux\", \"to\": \"GRUB2\" }, {\"from\": \"Linux\", \"to\": \"SystemCTL\" }, {\"from\": \"Discrete Mathematics\", \"to\": \"Probability Theory\" }, {\"from\": \"Discrete Mathematics\", \"to\": \"Graph Theory\" }, {\"from\": \"Functional\", \"to\": \"Haskell\" }, {\"from\": \"Functional\", \"to\": \"Mathematica\" }, {\"from\": \"API\", \"to\": \"GraphQL\" }, {\"from\": \"API\", \"to\": \"RESTful\" }, {\"from\": \"Dimensionality Reduction\", \"to\": \"PCA\" }, {\"from\": \"Dimensionality Reduction\", \"to\": \"Kernel PCA\" }, {\"from\": \"Dimensionality Reduction\", \"to\": \"Autoencoder\" }, {\"from\": \"Databases\", \"to\": \"SQL\" }, {\"from\": \"Databases\", \"to\": \"noSQL\" }, {\"from\": \"Databases\", \"to\": \"Neo4j\" }, {\"from\": \"Databases\", \"to\": \"Postgres\" }, {\"from\": \"Databases\", \"to\": \"Dgraph\" }, {\"from\": \"Databases\", \"to\": \"Cypher\" }, {\"from\": \"Databases\", \"to\": \"MariaDB\" }, {\"from\": \"Statistics\", \"to\": \"Bayesian\" }, {\"from\": \"Statistics\", \"to\": \"Multivariate Statistics\" }, {\"from\": \"Statistics\", \"to\": \"Frequentist\" }, {\"from\": \"Statistics\", \"to\": \"Bias-Variance Tradeoff\" }, {\"from\": \"R\", \"to\": \"MLE\" }, {\"from\": \"R\", \"to\": \"MAP\" }, {\"from\": \"R\", \"to\": \"Keras\" }, {\"from\": \"R\", \"to\": \"Generalized Linear Models\" }, {\"from\": \"R\", \"to\": \"ggplot2\" }, {\"from\": \"R\", \"to\": \"networkD3\" }, {\"from\": \"R\", \"to\": \"data.tree\" }, {\"from\": \"OOP\", \"to\": \"Oracle/Matlab\" }, {\"from\": \"OOP\", \"to\": \"C++\" }, {\"from\": \"OOP\", \"to\": \"Java\" }, {\"from\": \"Feature Selection\", \"to\": \"FCBF (Filter)\" }, {\"from\": \"Feature Selection\", \"to\": \"Wrapper Methods\" }, {\"from\": \"Feature Selection\", \"to\": \"Random Forest Classifiers\" }, {\"from\": \"Web Development\", \"to\": \"Kubernetes\" }, {\"from\": \"Web Development\", \"to\": \"NodeJS\" }, {\"from\": \"Web Development\", \"to\": \"Docker\" }, {\"from\": \"Web Development\", \"to\": \"JavaScript\" }, {\"from\": \"Web Development\", \"to\": \"Flask\" }, {\"from\": \"Geometry\", \"to\": \"Algebraic Geometry\" }, {\"from\": \"Geometry\", \"to\": \"Differential Geometry\" }, {\"from\": \"MAP\", \"to\": \"Bayesian\" }, {\"from\": \"Confidence Intervals\", \"to\": \"Frequentist\" }, {\"from\": \"Lp Norms\", \"to\": \"Vector Spaces\" }, {\"from\": \"Hypothesis Testing\", \"to\": \"Frequentist\" }, {\"from\": \"Method of Moments\", \"to\": \"Frequentist\" }, {\"from\": \"Maximum Likelihood Estimation\", \"to\": \"Frequentist\" }, {\"from\": \"Bayesian\", \"to\": \"Dirichlet Tree Priors\" }, {\"from\": \"Linear Algebra\", \"to\": \"Vector Spaces\" }, {\"from\": \"Vector Spaces\", \"to\": \"Complex Space\" }]};\n\nvar options = {\n    \"edges\": {\n        \"color\": {\"inherit\": true}, \n        \"smooth\": false,\n        \"width\": 2,\n        \"selectionWidth\": function (width) {return width+2;}, \n        \"hoverWidth\": function (width) {return width+2;}\n    },\n    \"groups\": {\n        \"1\": {\n            \"font\": groupFont[1],\n            \"borderWidth\": 3, \n            \"size\":40, \n            \"color\": {\"background\": \"rgba(255,179,156,0.5)\", \"border\": \"rgba(255,133,193,1)\"}\n        },\n        \"2\": {\n            \"font\": groupFont[2],\n            \"borderWidth\": 2, \n            \"size\": 32, \n            \"color\": {\"background\": \"rgba(169,217,187,.5)\", \"border\": \"rgba(103,243,187,1)\"}\n        },\n        \"3\": {\n            \"font\": groupFont[3],\n            \"borderWidth\": 1, \n            \"size\":20,\n            \"color\": {\"background\": \"rgba(208,192,255,0.5)\", \"border\": \"rgba(191,165,255,1)\"},\n            \n        }\n    },\n    \"interaction\": {\n        hover: true,\n        hoverConnectedEdges: true,\n        hoverEdges: true,\n        selectable: false,\n        selectConnectedEdges: false,\n        zoomView: false,\n        dragView: false\n    },\n    \"physics\": {\n    \"repulsion\": {\n        \"centralGravity\": 1,\n        \"springLength\": 200,\n        \"springConstant\": 0.53,\n        \"nodeDistance\": 275,\n        \"damping\": 0.3\n    },\n    \"minVelocity\": 0.75,\n    \"solver\": \"repulsion\"\n    }\n};\n\nexport default class Skills extends Component {\n    setState(stateObj) {\n        if (this.mounted) {\n          super.setState(stateObj);\n        }\n      }\n      componentWillMount() {\n        this.mounted = true;\n      }\n      constructor(props) {\n        super(props);\n        this.events = {\n          select: function(event) {\n            var { nodes, edges } = event;\n            console.log(\"Selected nodes:\");\n            console.log(nodes);\n            console.log(\"Selected edges:\");\n            console.log(edges);\n          },\n          hoverNode: function(event) {\n            this.neighbourhoodHighlight(event, this.props.searchData);\n          },\n          blurNode: function(event) {\n            this.neighbourhoodHighlightHide(event);\n          },\n          click: function(event) {\n            this.redirectToLearn(event, this.props.searchData);\n          }\n        };\n        this.state = {\n          graph: graph,\n          style: {width: \"100vw\", height: \"100vh\", position: \"absolute\", zindex: \"1\"},\n          network: null\n        };\n        this.measure = this.measure.bind(this);\n        this.events.hoverNode = this.events.hoverNode.bind(this);\n        this.events.blurNode = this.events.blurNode.bind(this);\n        this.events.click = this.events.click.bind(this);\n        this.neighbourhoodHighlight = this.neighbourhoodHighlight.bind(this);\n        this.redirectToLearn = this.redirectToLearn.bind(this);\n        this.neighbourhoodHighlightHide = this.neighbourhoodHighlightHide.bind(\n          this\n        );\n      }\n    \n      componentDidMount() {\n        this.mounted = true;\n        window.addEventListener(\"resize\", this.measure);\n      }\n    \n      componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener(\"resize\", this.measure);\n      }\n    \n      measure(data) {\n        console.log(\"measure\");\n        this.state.network.redraw();\n        this.state.network.fit();\n      }\n    \n      redirectToLearn(params, searchData) {\n        console.log(this.state.network.getNodeAt(params.pointer.DOM));\n      }\n    \n      neighbourhoodHighlight(params, searchData) {\n        let allNodes = this.state.graph.nodes;\n        // let cloneNodes = allNodes.map(a => {return {...a}});\n        let Nodes = new this.vis.DataSet(allNodes);\n        let cloneNodes = Nodes.get({ returnType: \"Object\" });\n    \n        this.state.network.canvas.body.container.style.cursor = \"pointer\";\n        // this.setState({cursor});\n    \n        if (params.node !== undefined) {\n          highlightActive = true;\n          let i, j;\n          let selectedNode = params.node;\n          let degrees = 2;\n    \n          for (var nodeId in cloneNodes) {\n            cloneNodes[nodeId].color = \"rgba(200,200,200,0.5)\";\n            if (cloneNodes[nodeId].hiddenLabel === undefined) {\n              cloneNodes[nodeId].hiddenLabel = cloneNodes[nodeId].label;\n              cloneNodes[nodeId].label = undefined;\n            }\n          }\n    \n          let connectedNodes = this.state.network.getConnectedNodes(selectedNode, [\"to\", \"from\"]);\n          let allConnectedNodes = [];\n          // get the second degree nodes\n          for (i = 1; i < degrees; i++) {\n            for (j = 0; j < connectedNodes.length; j++) {\n              allConnectedNodes = allConnectedNodes.concat(\n                this.state.network.getConnectedNodes(connectedNodes[j], [\"to\",\"from\"])\n              );\n            }\n          }\n    \n          // all second degree nodes get their own color and their label back\n          for (i = 0; i < allConnectedNodes.length; i++) {\n            cloneNodes[allConnectedNodes[i]].color = undefined;\n            if (cloneNodes[allConnectedNodes[i]][\"hiddenLabel\"] !== undefined) {\n              cloneNodes[allConnectedNodes[i]].label =\n                cloneNodes[allConnectedNodes[i]][\"hiddenLabel\"];\n              const font = this.state.network.body.nodes;\n              font[allConnectedNodes[i]].options.font.size = \n                groupFontSelected[cloneNodes[allConnectedNodes[i]].group].size;\n              font[allConnectedNodes[i]].options.font.color = \n                groupFontSelected[cloneNodes[allConnectedNodes[i]].group].color;\n              cloneNodes[allConnectedNodes[i]][\"hiddenLabel\"] = undefined;\n            }\n          }\n    \n          // all first degree nodes get their own color and their label back\n          for (let i = 0; i < connectedNodes.length; i++) {\n            cloneNodes[connectedNodes[i]].color = undefined;\n            if (cloneNodes[connectedNodes[i]][\"hiddenLabel\"] !== undefined) {\n              cloneNodes[connectedNodes[i]].label = \n                cloneNodes[connectedNodes[i]][\"hiddenLabel\"];\n              const font = this.state.network.body.nodes;\n              font[connectedNodes[i]].options.font.size = \n                groupFontSelected[cloneNodes[connectedNodes[i]].group].size;\n              font[connectedNodes[i]].options.font.color = \n                groupFontSelected[cloneNodes[connectedNodes[i]].group].color;\n              cloneNodes[connectedNodes[i]][\"hiddenLabel\"] = undefined;\n            }\n          }\n\n        } else if (highlightActive === true) {\n          // reset all nodes\n          for (let nodeId in cloneNodes) {\n            cloneNodes[nodeId].color = undefined;\n            if (cloneNodes[nodeId][\"hiddenLabel\"] !== undefined) {\n              const font = this.state.network.body.nodes;\n              font[nodeId].options.font.size = \n                groupFont[cloneNodes[nodeId].group].size;\n              font[nodeId].options.font.color = \n                groupFont[cloneNodes[nodeId].group].color;\n              cloneNodes[nodeId][\"hiddenLabel\"] = undefined;\n            }\n          }\n          highlightActive = false;\n        }\n    \n        let updateArray = [];\n        for (let nodeId in cloneNodes) {\n          if (cloneNodes.hasOwnProperty(nodeId)) {\n            updateArray.push(cloneNodes[nodeId]);\n          }\n        }\n        if (this.mounted) {\n          this.setState({\n            graph: {\n              nodes: updateArray,\n              edges: this.state.graph.edges\n            }\n          });\n        }\n      }\n    \n      neighbourhoodHighlightHide(params) {\n        let allNodes = this.state.graph.nodes;\n    \n        let Nodes = new this.vis.DataSet(allNodes);\n        let allNodess = Nodes.get({ returnType: \"Object\" });\n        // let allNodess = allNodes.map(a => {return {...a}})\n        this.state.network.canvas.body.container.style.cursor = \"default\";\n    \n        for (var nodeId in allNodess) {\n          allNodess[nodeId].color = \"rgba(200,200,200,0.5)\";\n          if (allNodess[nodeId].hiddenLabel === undefined) {\n            allNodess[nodeId].hiddenLabel = allNodess[nodeId].label;\n            allNodess[nodeId].label = undefined;\n          }\n        }\n    \n        highlightActive = true;\n        if (highlightActive === true) {\n          // reset all nodes\n          for (var nodeIds in allNodess) {\n            allNodess[nodeIds].color = undefined;\n            if (allNodess[nodeIds].hiddenLabel !== undefined) {\n              allNodess[nodeIds].label = allNodess[nodeIds].hiddenLabel;\n              const font = this.state.network.body.nodes;\n              console.log(font);\n              font[nodeIds].options.font.size = \n                groupFont[allNodess[nodeIds].group].size;\n              font[nodeIds].options.font.color = \n                groupFont[allNodess[nodeIds].group].color;\n              this.setState({ font });\n              allNodess[nodeIds].hiddenLabel = undefined;\n            }\n          }\n          highlightActive = false;\n        }\n    \n        var updateArray = [];\n        for (var nodeIde in allNodess) {\n          if (allNodess.hasOwnProperty(nodeIde)) {\n            updateArray.push(allNodess[nodeIde]);\n          }\n        }\n        if (this.mounted) {\n          this.setState({\n            graph: {\n              nodes: updateArray,\n              edges: this.state.graph.edges\n            }\n          });\n        }\n      }\n    \n      getNetwork = data => {\n        this.setState({ network: data });\n      };\n      getEdges = data => {\n        console.log(data);\n      };\n      getNodes = data => {\n        console.log(data);\n      };\n      render() {\n        return (\n            <Graph\n              graph={this.state.graph}\n              style={this.state.style}\n              options={options}\n              getNetwork={this.getNetwork}\n              getEdges={this.getEdges}\n              getNodes={this.getNodes}\n              events={this.events}\n              vis={vis => (this.vis = vis)}\n            />\n        );\n      }\n}\n","import React, { Component } from 'react';\nimport Social from '../components/Social';\n\nclass Contact extends Component {\n    render() {\n        return (\n            <div className=\"condiv blur\">\n            <h1 className=\"subtopic\">Contact Me</h1>\n            <h3>Email  :   me@floydeverest.com</h3>\n            <Social />\n            </div>\n            )\n        }\n    }\n    \n    export default Contact\n    ","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from \"react-router-dom\";\nimport Navbar from './components/Navbar';\nimport Home from './contents/Home';\nimport About from './contents/About';\nimport Education from './contents/Education';\nimport Skills from './contents/Skills';\nimport Contact from './contents/Contact';\n\n\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <Navbar />\n    <Route exact path=\"/\">\n    <Home />\n    </Route>\n    <Route path=\"/about\">\n    <About />\n    </Route>\n    <Route path=\"/education\">\n    <Education />\n    </Route>\n    <Route path=\"/skills\">\n    <Skills />\n    </Route>\n    <Route path=\"/contact\">\n    <Contact />\n    </Route>\n    </div>\n    </Router>\n    );\n  }\n  \n  export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}